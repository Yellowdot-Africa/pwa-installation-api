name: Deploy PWA Installation API

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Verify dist files were built
        run: |
          echo "Checking if dist directory exists..."
          if [ -d "dist" ]; then
            echo "✅ dist directory found"
            echo "Contents of dist directory:"
            ls -la dist/
            if [ -f "dist/server.js" ]; then
              echo "✅ dist/server.js found"
            else
              echo "❌ dist/server.js not found!"
              echo "Looking for other .js files:"
              find dist/ -name "*.js" || true
              exit 1
            fi
          else
            echo "❌ dist directory not found!"
            exit 1
          fi

      - name: Prepare deployment directory
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.DEPLOY_KEY_YD_TELECEL }}
          script: |
            mkdir -p /home/administrator/PROJECTS/pwa-installation-api/dist
            echo "Deployment directory prepared"

      - name: Upload dist files
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.DEPLOY_KEY_YD_TELECEL }}
          source: "dist/"
          target: "/home/administrator/PROJECTS/pwa-installation-api/"
          overwrite: true

      - name: Verify files on server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.DEPLOY_KEY_YD_TELECEL }}
          script: |
            echo "Checking uploaded files on server..."
            ls -la /home/administrator/PROJECTS/pwa-installation-api/dist/
            if [ -f "/home/administrator/PROJECTS/pwa-installation-api/dist/server.js" ]; then
              echo "✅ server.js found on server"
            else
              echo "❌ server.js not found on server!"
              echo "Available files:"
              find /home/administrator/PROJECTS/pwa-installation-api/dist/ -name "*.js" || true
              exit 1
            fi

      - name: Verify .env file exists on server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.DEPLOY_KEY_YD_TELECEL }}
          script: |
            if [ -f "/home/administrator/PROJECTS/pwa-installation-api/.env" ]; then
              echo "✅ .env file found on server"
            else
              echo "❌ .env file not found on server!"
              exit 1
            fi

      - name: Restart application with PM2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.DEPLOY_KEY_YD_TELECEL }}
          script: |
            cd /home/administrator/PROJECTS/pwa-installation-api
            
            # Check what's the main server file
            if [ -f "dist/server.js" ]; then
              SERVER_FILE="dist/server.js"
            elif [ -f "dist/index.js" ]; then
              SERVER_FILE="dist/index.js"
            elif [ -f "dist/main.js" ]; then
              SERVER_FILE="dist/main.js"
            else
              echo "❌ No server file found in dist directory!"
              echo "Available files:"
              find dist/ -name "*.js"
              exit 1
            fi
            
            echo "Using server file: $SERVER_FILE"
            
            # Stop if exists, then start
            pm2 stop pwa-installation-api || true
            pm2 start $SERVER_FILE --name pwa-installation-api
            pm2 save
            pm2 status
